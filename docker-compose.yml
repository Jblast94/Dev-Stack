networks:
  traefik-public:
    external: false

services:
  # Traefik - Reverse Proxy
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=admin@myn8n.art"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik_certificates:/letsencrypt"
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.myn8n.art`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
      - "traefik.http.middlewares.auth-traefik.basicauth.users=admin:$apr1$rqx69b.u$C77VFXO2Zphz3u5zqsQtj."
      - "traefik.http.routers.traefik.middlewares=auth-traefik"
    restart: unless-stopped

  # Ollama - Local LLM Server
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - traefik-public
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 16G
        reservations:
          cpus: '1'
          memory: 8G
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ollama.rule=Host(`llm.myn8n.art`)"
      - "traefik.http.routers.ollama.entrypoints=websecure"
      - "traefik.http.routers.ollama.tls.certresolver=myresolver"
      - "traefik.http.services.ollama.loadbalancer.server.port=11434"
    restart: unless-stopped

  # OpenWebUI - Web Interface for Ollama
  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    volumes:
      - openwebui_data:/app/backend/data
    networks:
      - traefik-public
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 2G
    environment:
      - OLLAMA_API_BASE_URL=http://ollama:11434/api
    depends_on:
      - ollama
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openwebui.rule=Host(`chat.myn8n.art`)"
      - "traefik.http.routers.openwebui.entrypoints=websecure"
      - "traefik.http.routers.openwebui.tls.certresolver=myresolver"
      - "traefik.http.services.openwebui.loadbalancer.server.port=8080"
    restart: unless-stopped

  # n8n - Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    networks:
      - traefik-public
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 6G
        reservations:
          cpus: '0.5'
          memory: 4G
    environment:
      - N8N_HOST=n8n.myn8n.art
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - N8N_USER_MANAGEMENT_DISABLED=true
      - NODE_ENV=production
      - WEBHOOK_URL=https://n8n.myn8n.art/
    volumes:
      - /home/ubuntu/n8n_data:/home/node/.n8n  # Using existing n8n data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n.myn8n.art`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls.certresolver=myresolver"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
    restart: unless-stopped

  # Minio - S3-compatible Object Storage
  minio:
    image: minio/minio
    container_name: minio
    networks:
      - traefik-public
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server --console-address ":9001" /data
    labels:
      - "traefik.enable=true"
      # API Configuration
      - "traefik.http.services.minio-api.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio-api.service=minio-api"
      - "traefik.http.routers.minio-api.rule=Host(`s3.myn8n.art`)"
      - "traefik.http.routers.minio-api.entrypoints=websecure"
      - "traefik.http.routers.minio-api.tls.certresolver=myresolver"
      # Console Configuration
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"
      - "traefik.http.routers.minio-console.service=minio-console"
      - "traefik.http.routers.minio-console.rule=Host(`s3-console.myn8n.art`)"
      - "traefik.http.routers.minio-console.entrypoints=websecure"
      - "traefik.http.routers.minio-console.tls.certresolver=myresolver"
    restart: unless-stopped

  # Adminer - Database Management
  adminer:
    image: adminer
    container_name: adminer
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`db.myn8n.art`)"
      - "traefik.http.routers.adminer.entrypoints=websecure"
      - "traefik.http.routers.adminer.tls.certresolver=myresolver"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
    restart: unless-stopped

  # Portainer - Container Management UI
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    networks:
      - traefik-public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`docker.myn8n.art`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=myresolver"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    restart: unless-stopped

  # VS Code Server
  code-server:
    image: codercom/code-server:latest
    container_name: code-server
    networks:
      - traefik-public
    volumes:
      - code_server_data:/home/coder/.local/share/code-server
      - /home/ubuntu:/home/coder/project
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - PASSWORD=your_secure_password  # Add this line to set VS Code Server password
      - DOCKER_GID=999
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.code-server.rule=Host(`code.myn8n.art`)"
      - "traefik.http.routers.code-server.entrypoints=websecure"
      - "traefik.http.routers.code-server.tls.certresolver=myresolver"
      - "traefik.http.services.code-server.loadbalancer.server.port=8080"
    restart: unless-stopped

  # Grafana for monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - traefik-public
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=your_secure_password  # Change this
      - GF_SERVER_ROOT_URL=https://monitor.myn8n.art
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`monitor.myn8n.art`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    restart: unless-stopped

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - traefik-public
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`metrics.myn8n.art`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=myresolver"
      - "traefik.http.routers.prometheus.middlewares=auth-prometheus"
      - "traefik.http.middlewares.auth-prometheus.basicauth.users=admin:$apr1$rqx69b.u$C77VFXO2Zphz3u5zqsQtj."
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    restart: unless-stopped

volumes:
  traefik_certificates:
  ollama_data:
  openwebui_data:
  minio_data:
  portainer_data:
  code_server_data:
  grafana_data:
  prometheus_data:
